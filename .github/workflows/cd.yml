# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. 
on:
  release:  
    types: [published, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildapi:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12, 15]
    # Pasos a ejecutar
    steps:
      # Hace pull del repo
      - uses: actions/checkout@v2
      # Instala y configura la versi√≥n de nodejs
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Ejecuta npm install
      - run: npm install
        working-directory: src/api
      # Ejecuta npm test
      - run: npm test
        working-directory: src/api
      - uses: docker/setup-buildx-action@v1        
      - name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}      
      - name: Docker build api
        uses: docker/build-push-action@v2
        with:
          build-args: |
            nv=${{ matrix.node-version }}
          context: src/api
          file: src/api/Dockerfile
          platforms: linux/amd64
          tags: eiximenis/s2020-api:${{ matrix.node-version }}-${{ github.ref }}
          push: true
  buildweb:
    runs-on: ubuntu-latest
    steps:
      # Hace pull del repo
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1        
      - name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}        
      - name: Docker build web
        uses: docker/build-push-action@v2
        with:
          context: src/BeersWeb
          file: src/BeersWeb/Dockerfile
          platforms: linux/amd64
          tags: eiximenis/s2020-web:${{ github.ref }}
          push: true
  
  deployapiddev:
    needs: [buildapi, buildweb]
    runs-on: ubuntu-latest
    environment: dev
    env:
      DNS: s2020.westeurope.cloudapp.azure.com
      NAMESPACE: dev
      APPNAME: apidev
      IMAGE: eiximenis/s2020-api
      TAG: 15-${{ github.ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Helm install API
      uses: WyriHaximus/github-action-helm3@v2
      with:
        kubeconfig: '${{ secrets.KUBECONFIG }}'
        exec: helm upgrade $APPNAME charts/api  --install --wait --atomic --namespace=$NAMESPACE --set=app.name=$APPNAME --set image.repository=$IMAGE --set image.tag=$TAG
  deploywebddev:
    needs: [buildapi, buildweb]
    runs-on: ubuntu-latest
    environment: dev
    env:
      DNS: s2020.westeurope.cloudapp.azure.com
      NAMESPACE: dev
      APPNAME: webdev
      IMAGE: eiximenis/s2020-web
      TAG: ${{ github.ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Helm install API
      uses: WyriHaximus/github-action-helm3@v2
      with:
        kubeconfig: '${{ secrets.KUBECONFIG }}'
        exec: helm upgrade $APPNAME charts/web  --install --wait --atomic --namespace=$NAMESPACE --set=app.name=$APPNAME --set image.repository=$IMAGE --set image.tag=$TAG
    